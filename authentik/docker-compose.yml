version: "3"

services:
  authentik-server:
    container_name: authentik-server
    image: beryju/authentik
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_AUTHENTIK_PASS}
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET}
    labels:
      traefik.enable: true
      traefik.http.routers.authentik.entrypoints: http
      traefik.http.routers.authentik.rule: Host(`${AUTHENTIK_BASE_URL}`) || HostRegexp(`{subdomain:[a-z0-9]+}.${DOMAIN_NAME}`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.middlewares.authentik-https-redirect.redirectscheme.scheme: https
      traefik.http.routers.authentik.middlewares: authentik-https-redirect
      traefik.http.routers.authentik-secure.entrypoints: https
      traefik.http.routers.authentik-secure.rule: Host(`${AUTHENTIK_BASE_URL}`) || HostRegexp(`{subdomain:[a-z0-9]+}.${DOMAIN_NAME}`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.authentik-secure.tls: true
      traefik.http.routers.authentik-secure.service: authentik
      traefik.http.routers.authentik-secure.middlewares: default-headers@file
      traefik.http.services.authentik.loadbalancer.server.port: 9000
      traefik.docker.network: proxy
    volumes:
      - ./authentik/media:/media
      - ./authentik/templates:/templates
    env_file:
      - .env
    networks:
      - authentik
      - database
      - proxy

  authentik-worker:
    container_name: authentik-worker
    image: beryju/authentik
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_AUTHENTIK_PASS}
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./authentik/media:/media
      - ./authentik/templates:/templates
      - ./authentik/certs:/certs
    env_file:
      - .env
    networks:
      - authentik
      - database

  authentik-redis:
    container_name: authentik-redis
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - ./authentik/redis:/data
    networks:
      - authentik

networks:
  database: 
    external: true
  proxy:
    external: true
  authentik: 
    external: true
